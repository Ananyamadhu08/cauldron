import { Icon, Link, MenuBar, NavBar, OptionsMenuList, SideBar, SideBarItem, TopBar, TopBarItem, TopBarMenu, TopBarTrigger, Workspace } from '@deque/cauldron-react'
import classNames from 'classnames'
import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import { createRef, Fragment, useEffect, useRef, useState } from 'react'
import { Route } from 'react-router-dom'
import SidebarLayout from '../layouts/SidebarLayout'
import TopbarLayout from '../layouts/TopbarLayout'
import styles from '../styles/Home.module.css'
import { NextPageWithLayout } from './_app'

const Page: NextPageWithLayout = () => {


  const [workspace, setWorkspace] = useState(null);
  const [thin, setThin] = useState(false);
  const [show, setShow] = useState(false);
  const [menuOpen, setMenuOpen] = useState(false);
  const topBarTrigger = createRef<HTMLButtonElement>();
  
  const onTriggerClick = (e: React.MouseEvent<HTMLButtonElement | HTMLElement>) => {
  
    if (e) {
      e.preventDefault();
    }
  
    if (show && topBarTrigger?.current) {
      topBarTrigger?.current?.focus();
    }
  
    setShow(!show)
  };
  
  const toggleMenu = () => {
    setMenuOpen(!menuOpen);
  };
  
  const handleClose = () => {
    setMenuOpen(false);
  };
  
  // // const onSettingsSelect = e => {
  // //   if (e.target.id === 'theme') {
  // //     localStorage.setItem(
  // //       'cauldron-key',
  // //       theme === 'light' ? 'dark' : 'light'
  // //     );
  // //     toggleTheme();
  // //   } else {
  // //     setState({
  // //       thin: e.target.innerText === 'Thin top bar'
  // //     });
  // //   }
  // // };
  
  // const renderSideBarLink = ({pathname: string, text: string, isCurrent: boolean}) => {

  //   return (
  //     <Link
  //       to={{
  //         pathname,
  //         state: { title: `${text} | Component demo` }
  //       }}
  //       onClick={() => {
  //         setState({ show: false });
  //         workspace?.focus();
  //       }}
  //       aria-current={isCurrent ? 'page' : null}
  //     >
  //       {text}
  //     </Link>
  //   );
  // };
  
  // useEffect(() => {
  //   document.addEventListener('focusTopBarMenu', focusTopBarMenuItem);
  
  //   return () => {
  //     document.removeEventListener('focusTopBarMenu', focusTopBarMenuItem);
  //   };
  // }, []);
  
  // const { show, thin } = state;
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      
      <main className={styles.main}>
      <TopbarLayout />
      <SidebarLayout />
        <Workspace
          id="main-content"
          workspaceRef={el => setWorkspace}
          tabIndex={-1}
        >
          <Route exact path="/" component={Home} />
          {componentsList.map(name => {
            const DemoComponent = require(`./patterns/components/${name}`)
              .default;
            return (
              <Route
                key={name}
                exact
                path={`/components/${name}`}
                component={DemoComponent}
              />
            );
          })}
          <Route
            component={({ location }) =>
              location.state && location.state.title ? (
                <Helmet title={location.state.title} />
              ) : null
            }
          />
        </Workspace>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

export default Home
